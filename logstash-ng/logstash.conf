input{
    beats {
        port => 9200
    }
}

filter {
    truncate {
             fields => "message"
             length_bytes => 1048576
             add_tag => ["truncated"]
    }
    json {
        source => "message"
        tag_on_failure => ["_messageparsefailure"]
        skip_on_invalid_json => true
    }
    json {
        source => "MESSAGE"
        tag_on_failure => ["_MESSAGEjsonparsefailure"]
        skip_on_invalid_json => true
    }
    json {
        source => "msg"
        tag_on_failure => ["_msgparsefailure"]
        skip_on_invalid_json => true
    }
    if [logtype] == "metric" {
       mutate {
          replace => {
             "[@metadata][beat]" => "appmetrics"
          }
       }
    }
    if [source] =~ /^\/var\/lib\/mesos\/slave\/slaves\/.*$/ {
       dissect {
          mapping => {
             "source" => "/var/lib/mesos/slave/slaves/%{node}/frameworks/%{service}/executors/%{app}.%{+app}.%{taskid}/%{}"
          }
       }
    }
}

output {
    amazon_es {
        hosts => ["${ES_HOST}"]
        region => "${REGION}"
        index => "%{[@metadata][beat]}-%{+YYYY.MM.dd}"
        flush_size => "100"
    }
}
