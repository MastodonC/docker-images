input{
    beats {
        port => 9200
    }
}

filter {
    if [logtype] == "metric" {
       mutate {
          replace => {
             "[@metadata][beat]" => "appmetrics"
          }
       }
    }
    truncate {
        fields => "message"
        length_bytes => 1048576
    }
    if [source] =~ /^\/var\/lib\/mesos\/slave\/slaves\/.*$/ {
       dissect {
          mapping => {
             "source" => "/var/lib/mesos/slave/slaves/%{node}/frameworks/%{service}/executors/%{app}.%{+app}.%{taskid}/%{}"
          }
       }
    }
    if [namespace] == "com.amazonaws.services.kinesis.clientlibrary.lib.worker.Worker" {
        if [msg] == "Sleeping ..." {
           drop { }
        }
        if [msg] == "No activities assigned" {
            drop {}
        }
        if [msg] =~ /^Current stream shard assignments:.*$/ {
            drop {}
        }
    }
    # We want to do this as the whole point is to have searchable messages, however the performance hit is pretty hard due to many app
    # logs containing the entire event some of which are biggggg.
    #if [msg] {
    #   mutate {
    #      rename => {"msg" => "message" }
    #   }
    #}
    if [source] == "/var/log/mesos/dcos.log" {
        grok {
            match => {
                "message" => "^%{MONTH} %{MONTHDAY} %{TIME} %{HOSTNAME} %{GREEDYDATA:dcos.app}\[%{POSINT:pid}\]: ((?<log_severity>[EFIW])%{MONTHNUM}%{MONTHDAY}\s+%{TIME}\s+%{BASE10NUM:thread_id}\s+%{NOTSPACE:file}\:%{BASE10NUM:line}\]\s+)?%{GREEDYDATA:log_data}$"
            }
        }
        if [log_data] =~ /HTTP GET for \/slave.*with User-Agent='Mesos-State.*$/ {
            drop {}
        }
        if [log_data] {
            mutate {
               rename => {"log_data" => "message"}
            }
        }
        if [log_severity] == "E" {
            mutate {
               replace  => { "log_severity" => "error" }
            }
        }
        if [log_severity] == "W" {
            mutate {
               replace  => { "log_severity" => "warning" }
            }
        }
        if [log_severity] == "I" {
            mutate {
               replace  => { "log_severity" => "info" }
            }
        }
        if [log_severity] == "F" {
            mutate {
               replace  => { "log_severity" => "fatal" }
            }
        }
        if [log_severity] {
            mutate {
                rename => { "log_severity" => "level" }
            }
        }
    }
}

output {
    amazon_es {
        hosts => ["${ES_HOST}"]
        region => "${REGION}"
        index => "%{[@metadata][beat]}-%{+YYYY.MM.dd}"
        flush_size => "100"
        retry_max_items => "100"
        retry_max_interval => "50"
    }
}
